{"id":0,"question":"How many singers do we have?","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT count(*) FROM singer","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    How many singers do we have?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM singer;"}
{"id":1,"question":"What is the total number of singers?","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT count(*) FROM singer","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    What is the total number of singers?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM singer;"}
{"id":2,"question":"Show name, country, age for all singers ordered by age from the oldest to the youngest.","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    Show name, country, age for all singers ordered by age from the oldest to the youngest.\n    \n    SQL:\n"}],"response":"SELECT Name, Country, Age FROM singer ORDER BY Age DESC;"}
{"id":3,"question":"What are the names, countries, and ages for every singer in descending order of age?","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT name ,  country ,  age FROM singer ORDER BY age DESC","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    What are the names, countries, and ages for every singer in descending order of age?\n    \n    SQL:\n"}],"response":"SELECT Name, Country, Age FROM singer ORDER BY Age DESC;"}
{"id":4,"question":"What is the average, minimum, and maximum age of all singers from France?","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    What is the average, minimum, and maximum age of all singers from France?\n    \n    SQL:\n"}],"response":"SELECT AVG(Age), MIN(Age), MAX(Age)\nFROM singer\nWHERE Country = 'France'"}
{"id":5,"question":"What is the average, minimum, and maximum age for all French singers?","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    What is the average, minimum, and maximum age for all French singers?\n    \n    SQL:\n"}],"response":"SELECT AVG(Age), MIN(Age), MAX(Age)\nFROM singer\nWHERE Country = 'French'"}
{"id":6,"question":"Show the name and the release year of the song by the youngest singer.","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    Show the name and the release year of the song by the youngest singer.\n    \n    SQL:\n"}],"response":"SELECT s.Name, s.Song_release_year\nFROM singer s\nWHERE s.Age = (SELECT MIN(Age) FROM singer)\nLIMIT 1;"}
{"id":7,"question":"What are the names and release years for all the songs of the youngest singer?","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    What are the names and release years for all the songs of the youngest singer?\n    \n    SQL:\n"}],"response":"SELECT Song_Name, Song_release_year\nFROM singer\nWHERE Age = (SELECT MIN(Age) FROM singer)\n"}
{"id":8,"question":"What are all distinct countries where singers above age 20 are from?","schema":"concert_singer","dialect":"sqlite","gt_query":"SELECT DISTINCT country FROM singer WHERE age  >  20","schema_def":"CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n);\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n);\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)","schema_tables":"{\"stadium\": [\"Lowest\", \"Location\", \"Average\", \"Highest\", \"Capacity\", \"Stadium_ID\", \"Name\"], \"singer\": [\"Country\", \"Age\", \"Is_male\", \"Song_Name\", \"Singer_ID\", \"Song_release_year\", \"Name\"], \"concert\": [\"concert_ID\", \"Year\", \"Stadium_ID\", \"concert_Name\", \"Theme\"], \"singer_in_concert\": [\"Singer_ID\", \"concert_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/concert_singer/concert_singer.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"stadium\" (\n\"Stadium_ID\" int,\n\"Location\" text,\n\"Name\" text,\n\"Capacity\" int,\n\"Highest\" int,\n\"Lowest\" int,\n\"Average\" int,\nPRIMARY KEY (\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer\" (\n\"Singer_ID\" int,\n\"Name\" text,\n\"Country\" text,\n\"Song_Name\" text,\n\"Song_release_year\" text,\n\"Age\" int,\n\"Is_male\" bool,\nPRIMARY KEY (\"Singer_ID\")\n)\n\nCREATE TABLE \"concert\" (\n\"concert_ID\" int,\n\"concert_Name\" text,\n\"Theme\" text,\n\"Stadium_ID\" text,\n\"Year\" text,\nPRIMARY KEY (\"concert_ID\"),\nFOREIGN KEY (\"Stadium_ID\") REFERENCES \"stadium\"(\"Stadium_ID\")\n)\n\nCREATE TABLE \"singer_in_concert\" (\n\"concert_ID\" int,\n\"Singer_ID\" text,\nPRIMARY KEY (\"concert_ID\",\"Singer_ID\"),\nFOREIGN KEY (\"concert_ID\") REFERENCES \"concert\"(\"concert_ID\"),\nFOREIGN KEY (\"Singer_ID\") REFERENCES \"singer\"(\"Singer_ID\")\n)\n    \n    What are all distinct countries where singers above age 20 are from?\n    \n    SQL:\n"}],"response":"SELECT DISTINCT Country FROM singer WHERE Age > 20;"}
{"id":9,"question":"Find the number of pets whose weight is heavier than 10.","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT count(*) FROM pets WHERE weight  >  10","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    Find the number of pets whose weight is heavier than 10.\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM Pets WHERE weight > 10;"}
{"id":10,"question":"How many pets have a greater weight than 10?","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT count(*) FROM pets WHERE weight  >  10","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    How many pets have a greater weight than 10?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM Pets WHERE weight > 10;"}
{"id":11,"question":"Find the weight of the youngest dog.","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    Find the weight of the youngest dog.\n    \n    SQL:\n"}],"response":"SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')"}
{"id":12,"question":"How much does the youngest dog weigh?","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT weight FROM pets ORDER BY pet_age LIMIT 1","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    How much does the youngest dog weigh?\n    \n    SQL:\n"}],"response":"SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')"}
{"id":13,"question":"Find the maximum weight for each type of pet. List the maximum weight and pet type.","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    Find the maximum weight for each type of pet. List the maximum weight and pet type.\n    \n    SQL:\n"}],"response":"SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType;"}
{"id":14,"question":"List the maximum weight and type for each type of pet.","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT max(weight) ,  petType FROM pets GROUP BY petType","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    List the maximum weight and type for each type of pet.\n    \n    SQL:\n"}],"response":"SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType;"}
{"id":15,"question":"Find number of pets owned by students who are older than 20.","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    Find number of pets owned by students who are older than 20.\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) \nFROM Has_Pet \nJOIN Student ON Has_Pet.StuID = Student.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Student.Age > 20;"}
{"id":16,"question":"How many pets are owned by students that have an age greater than 20?","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    How many pets are owned by students that have an age greater than 20?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) \nFROM Has_Pet \nJOIN Student ON Has_Pet.StuID = Student.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Student.Age > 20"}
{"id":17,"question":"Find the number of dog pets that are raised by female students (with sex F).","schema":"pets_1","dialect":"sqlite","gt_query":"SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'","schema_def":"create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n);\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n);\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)","schema_tables":"{\"Student\": [\"Sex\", \"LName\", \"city_code\", \"Major\", \"Advisor\", \"Fname\", \"Age\", \"StuID\"], \"Has_Pet\": [\"PetID\", \"StuID\"], \"Pets\": [\"PetType\", \"pet_age\", \"weight\", \"PetID\"]}","db_path":"/tmp/uptrain_resources/spider/database/pets_1/pets_1.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    create table Student (\n       StuID    \tINTEGER PRIMARY KEY,\n       LName\t\tVARCHAR(12),\n       Fname\t\tVARCHAR(12),\n       Age\t\tINTEGER,\n       Sex\t\tVARCHAR(1),\n       Major\t\tINTEGER,\n       Advisor\t\tINTEGER,\n       city_code\tVARCHAR(3)\n)\n\ncreate table Has_Pet (\n       StuID\t\tINTEGER,\n       PetID\t\tINTEGER,\n       FOREIGN KEY(PetID) REFERENCES Pets(PetID),\n       FOREIGN KEY(StuID) REFERENCES Student(StuID)\n)\n\ncreate table Pets (\n       PetID\t\tINTEGER PRIMARY KEY,\n       PetType\t\tVARCHAR(20),\n       pet_age INTEGER,\n       weight REAL\n)\n    \n    Find the number of dog pets that are raised by female students (with sex F).\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) \nFROM Has_Pet \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nJOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Pets.PetType = 'dog' AND Student.Sex = 'F'"}
{"id":18,"question":"How many employees are there?","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT count(*) FROM employee","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    How many employees are there?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM employee;"}
{"id":19,"question":"Count the number of employees","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT count(*) FROM employee","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    Count the number of employees\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM employee;"}
{"id":20,"question":"Sort employee names by their age in ascending order.","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT name FROM employee ORDER BY age","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    Sort employee names by their age in ascending order.\n    \n    SQL:\n"}],"response":"SELECT Name FROM employee ORDER BY Age ASC;"}
{"id":21,"question":"List the names of employees and sort in ascending order of age.","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT name FROM employee ORDER BY age","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    List the names of employees and sort in ascending order of age.\n    \n    SQL:\n"}],"response":"SELECT Name FROM employee ORDER BY Age ASC;"}
{"id":22,"question":"What is the number of employees from each city?","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT count(*) ,  city FROM employee GROUP BY city","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    What is the number of employees from each city?\n    \n    SQL:\n"}],"response":"SELECT City, COUNT(Employee_ID) AS num_employees\nFROM employee\nGROUP BY City;"}
{"id":23,"question":"Count the number of employees for each city.","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT count(*) ,  city FROM employee GROUP BY city","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    Count the number of employees for each city.\n    \n    SQL:\n"}],"response":"SELECT City, COUNT(Employee_ID) AS num_employees\nFROM employee\nGROUP BY City;"}
{"id":24,"question":"Which cities do more than one employee under age 30 come from?","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    Which cities do more than one employee under age 30 come from?\n    \n    SQL:\n"}],"response":"SELECT City\nFROM employee\nWHERE Age < 30\nGROUP BY City\nHAVING COUNT(*) > 1;"}
{"id":25,"question":"Find the cities that have more than one employee under age 30.","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    Find the cities that have more than one employee under age 30.\n    \n    SQL:\n"}],"response":"SELECT City\nFROM employee\nWHERE Age < 30\nGROUP BY City\nHAVING COUNT(*) > 1;"}
{"id":26,"question":"Find the number of shops in each location.","schema":"employee_hire_evaluation","dialect":"sqlite","gt_query":"SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION","schema_def":"CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n);\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n);\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n);\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)","schema_tables":"{\"employee\": [\"Employee_ID\", \"City\", \"Age\", \"Name\"], \"shop\": [\"Number_products\", \"Location\", \"Shop_ID\", \"Manager_name\", \"District\", \"Name\"], \"hiring\": [\"Employee_ID\", \"Start_from\", \"Is_full_time\", \"Shop_ID\"], \"evaluation\": [\"Employee_ID\", \"Year_awarded\", \"Bonus\"]}","db_path":"/tmp/uptrain_resources/spider/database/employee_hire_evaluation/employee_hire_evaluation.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"employee\" (\n\"Employee_ID\" int,\n\"Name\" text,\n\"Age\" int,\n\"City\" text,\nPRIMARY KEY (\"Employee_ID\")\n)\n\nCREATE TABLE \"shop\" (\n\"Shop_ID\" int,\n\"Name\" text,\n\"Location\" text,\n\"District\" text,\n\"Number_products\" int,\n\"Manager_name\" text,\nPRIMARY KEY (\"Shop_ID\")\n)\n\nCREATE TABLE \"hiring\" (\n\"Shop_ID\" int,\n\"Employee_ID\" int,\n\"Start_from\" text,\n\"Is_full_time\" bool,\nPRIMARY KEY (\"Employee_ID\"),\nFOREIGN KEY (`Shop_ID`) REFERENCES `shop`(`Shop_ID`),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n\nCREATE TABLE \"evaluation\" (\n\"Employee_ID\" text,\n\"Year_awarded\" text,\n\"Bonus\" real,\nPRIMARY KEY (\"Employee_ID\",\"Year_awarded\"),\nFOREIGN KEY (`Employee_ID`) REFERENCES `employee`(`Employee_ID`)\n)\n    \n    Find the number of shops in each location.\n    \n    SQL:\n"}],"response":"SELECT Location, COUNT(*) AS num_shops\nFROM shop\nGROUP BY Location;"}
{"id":27,"question":"How many documents do we have?","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT count(*) FROM Documents","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    How many documents do we have?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM Documents;"}
{"id":28,"question":"Count the number of documents.","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT count(*) FROM Documents","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    Count the number of documents.\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM Documents;"}
{"id":29,"question":"List document IDs, document names, and document descriptions for all documents.","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT document_id ,  document_name ,  document_description FROM Documents","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    List document IDs, document names, and document descriptions for all documents.\n    \n    SQL:\n"}],"response":"SELECT Document_ID, Document_Name, Document_Description FROM Documents"}
{"id":30,"question":"What are the ids, names, and descriptions for all documents?","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT document_id ,  document_name ,  document_description FROM Documents","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    What are the ids, names, and descriptions for all documents?\n    \n    SQL:\n"}],"response":"SELECT Document_ID, Document_Name, Document_Description FROM Documents"}
{"id":31,"question":"What is the document name and template id for document with description with the letter 'w' in it?","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    What is the document name and template id for document with description with the letter 'w' in it?\n    \n    SQL:\n"}],"response":"SELECT Documents.Document_Name, Documents.Template_ID\nFROM Documents\nWHERE Documents.Document_Description LIKE '%w%'"}
{"id":32,"question":"Return the names and template ids for documents that contain the letter w in their description.","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    Return the names and template ids for documents that contain the letter w in their description.\n    \n    SQL:\n"}],"response":"SELECT Document_Name, Template_ID\nFROM Documents\nWHERE Document_Description LIKE '%w%'"}
{"id":33,"question":"What is the document id, template id and description for document named \"Robbin CV\"?","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    What is the document id, template id and description for document named \"Robbin CV\"?\n    \n    SQL:\n"}],"response":"SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = 'Robbin CV'"}
{"id":34,"question":"Return the document id, template id, and description for the document with the name Robbin CV.","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    Return the document id, template id, and description for the document with the name Robbin CV.\n    \n    SQL:\n"}],"response":"SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description\nFROM Documents\nJOIN Templates ON Documents.Template_ID = Templates.Template_ID\nWHERE Documents.Document_Name = 'Robbin CV'"}
{"id":35,"question":"How many different templates do all document use?","schema":"cre_Doc_Template_Mgt","dialect":"sqlite","gt_query":"SELECT count(DISTINCT template_id) FROM Documents","schema_def":"CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n);\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)","schema_tables":"{\"Ref_Template_Types\": [\"Template_Type_Code\", \"Template_Type_Description\"], \"Templates\": [\"Template_Type_Code\", \"Date_Effective_To\", \"Version_Number\", \"Date_Effective_From\", \"Template_Details\", \"Template_ID\"], \"Documents\": [\"Document_ID\", \"Other_Details\", \"Template_ID\", \"Document_Name\", \"Document_Description\"], \"Paragraphs\": [\"Paragraph_Text\", \"Document_ID\", \"Paragraph_ID\", \"Other_Details\"]}","db_path":"/tmp/uptrain_resources/spider/database/cre_Doc_Template_Mgt/cre_Doc_Template_Mgt.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE Ref_Template_Types (\nTemplate_Type_Code CHAR(15) NOT NULL,\nTemplate_Type_Description VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_Type_Code)\n)\n\nCREATE TABLE Templates (\nTemplate_ID INTEGER NOT NULL,\nVersion_Number INTEGER NOT NULL,\nTemplate_Type_Code CHAR(15) NOT NULL,\nDate_Effective_From DATETIME,\nDate_Effective_To DATETIME,\nTemplate_Details VARCHAR(255) NOT NULL,\nPRIMARY KEY (Template_ID),\nFOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n)\n\nCREATE TABLE Documents (\nDocument_ID INTEGER NOT NULL,\nTemplate_ID INTEGER,\nDocument_Name VARCHAR(255),\nDocument_Description VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Document_ID),\nFOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n)\n\nCREATE TABLE Paragraphs (\nParagraph_ID INTEGER NOT NULL,\nDocument_ID INTEGER NOT NULL,\nParagraph_Text VARCHAR(255),\nOther_Details VARCHAR(255),\nPRIMARY KEY (Paragraph_ID),\nFOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n)\n    \n    How many different templates do all document use?\n    \n    SQL:\n"}],"response":"SELECT COUNT(DISTINCT Template_ID) FROM Documents;"}
{"id":36,"question":"How many teachers are there?","schema":"course_teach","dialect":"sqlite","gt_query":"SELECT count(*) FROM teacher","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    How many teachers are there?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM teacher;"}
{"id":37,"question":"What is the total count of teachers?","schema":"course_teach","dialect":"sqlite","gt_query":"SELECT count(*) FROM teacher","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    What is the total count of teachers?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM teacher;"}
{"id":38,"question":"List the names of teachers in ascending order of age.","schema":"course_teach","dialect":"sqlite","gt_query":"SELECT Name FROM teacher ORDER BY Age ASC","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    List the names of teachers in ascending order of age.\n    \n    SQL:\n"}],"response":"SELECT Name FROM teacher ORDER BY Age ASC;"}
{"id":39,"question":"What are the names of the teachers ordered by ascending age?","schema":"course_teach","dialect":"sqlite","gt_query":"SELECT Name FROM teacher ORDER BY Age ASC","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    What are the names of the teachers ordered by ascending age?\n    \n    SQL:\n"}],"response":"SELECT Name FROM teacher ORDER BY Age ASC;"}
{"id":40,"question":"What are the age and hometown of teachers?","schema":"course_teach","dialect":"sqlite","gt_query":"SELECT Age ,  Hometown FROM teacher","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    What are the age and hometown of teachers?\n    \n    SQL:\n"}],"response":"SELECT Age, Hometown FROM teacher;"}
{"id":41,"question":"What is the age and hometown of every teacher?","schema":"course_teach","dialect":"sqlite","gt_query":"SELECT Age ,  Hometown FROM teacher","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    What is the age and hometown of every teacher?\n    \n    SQL:\n"}],"response":"SELECT Age, Hometown FROM teacher;"}
{"id":42,"question":"List the name of teachers whose hometown is not `` Little Lever Urban District '' .","schema":"course_teach","dialect":"sqlite","gt_query":"select name from teacher where hometown != \"little lever urban district\"","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    List the name of teachers whose hometown is not `` Little Lever Urban District '' .\n    \n    SQL:\n"}],"response":"SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'"}
{"id":43,"question":"What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?","schema":"course_teach","dialect":"sqlite","gt_query":"select name from teacher where hometown != \"little lever urban district\"","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?\n    \n    SQL:\n"}],"response":"SELECT Name FROM teacher WHERE Hometown <> 'Little Lever Urban District'"}
{"id":44,"question":"Show the name of teachers aged either 32 or 33?","schema":"course_teach","dialect":"sqlite","gt_query":"SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33","schema_def":"CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n);\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n);\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)","schema_tables":"{\"course\": [\"Course\", \"Staring_Date\", \"Course_ID\"], \"teacher\": [\"Hometown\", \"Age\", \"Name\", \"Teacher_ID\"], \"course_arrange\": [\"Grade\", \"Teacher_ID\", \"Course_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/course_teach/course_teach.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"course\" (\n\"Course_ID\" int,\n\"Staring_Date\" text,\n\"Course\" text,\nPRIMARY KEY (\"Course_ID\")\n)\n\nCREATE TABLE \"teacher\" (\n\"Teacher_ID\" int,\n\"Name\" text,\n\"Age\" text,\n\"Hometown\" text,\nPRIMARY KEY (\"Teacher_ID\")\n)\n\nCREATE TABLE \"course_arrange\" (\n\"Course_ID\" int,\n\"Teacher_ID\" int,\n\"Grade\" int,\nPRIMARY KEY (\"Course_ID\",\"Teacher_ID\",\"Grade\"),\nFOREIGN KEY (\"Course_ID\") REFERENCES `course`(\"Course_ID\"),\nFOREIGN KEY (\"Teacher_ID\") REFERENCES `teacher`(\"Teacher_ID\")\n)\n    \n    Show the name of teachers aged either 32 or 33?\n    \n    SQL:\n"}],"response":"SELECT Name FROM teacher WHERE Age IN ('32', '33')"}
{"id":45,"question":"How many visitors below age 30 are there?","schema":"museum_visit","dialect":"sqlite","gt_query":"SELECT count(*) FROM visitor WHERE age  <  30","schema_def":"CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n);\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n);\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)","schema_tables":"{\"museum\": [\"Museum_ID\", \"Open_Year\", \"Name\", \"Num_of_Staff\"], \"visitor\": [\"Level_of_membership\", \"Age\", \"Name\", \"ID\"], \"visit\": [\"Museum_ID\", \"Total_spent\", \"Num_of_Ticket\", \"visitor_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/museum_visit/museum_visit.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n)\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n)\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)\n    \n    How many visitors below age 30 are there?\n    \n    SQL:\n"}],"response":"SELECT COUNT(*) FROM visitor WHERE Age < 30"}
{"id":46,"question":"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.","schema":"museum_visit","dialect":"sqlite","gt_query":"SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC","schema_def":"CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n);\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n);\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)","schema_tables":"{\"museum\": [\"Museum_ID\", \"Open_Year\", \"Name\", \"Num_of_Staff\"], \"visitor\": [\"Level_of_membership\", \"Age\", \"Name\", \"ID\"], \"visit\": [\"Museum_ID\", \"Total_spent\", \"Num_of_Ticket\", \"visitor_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/museum_visit/museum_visit.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n)\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n)\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)\n    \n    Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.\n    \n    SQL:\n"}],"response":"SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;"}
{"id":47,"question":"What is the average age of the visitors whose membership level is not higher than 4?","schema":"museum_visit","dialect":"sqlite","gt_query":"SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4","schema_def":"CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n);\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n);\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)","schema_tables":"{\"museum\": [\"Museum_ID\", \"Open_Year\", \"Name\", \"Num_of_Staff\"], \"visitor\": [\"Level_of_membership\", \"Age\", \"Name\", \"ID\"], \"visit\": [\"Museum_ID\", \"Total_spent\", \"Num_of_Ticket\", \"visitor_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/museum_visit/museum_visit.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n)\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n)\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)\n    \n    What is the average age of the visitors whose membership level is not higher than 4?\n    \n    SQL:\n"}],"response":"SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;"}
{"id":48,"question":"Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.","schema":"museum_visit","dialect":"sqlite","gt_query":"SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","schema_def":"CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n);\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n);\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)","schema_tables":"{\"museum\": [\"Museum_ID\", \"Open_Year\", \"Name\", \"Num_of_Staff\"], \"visitor\": [\"Level_of_membership\", \"Age\", \"Name\", \"ID\"], \"visit\": [\"Museum_ID\", \"Total_spent\", \"Num_of_Ticket\", \"visitor_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/museum_visit/museum_visit.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n)\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n)\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)\n    \n    Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.\n    \n    SQL:\n"}],"response":"SELECT Name, Level_of_membership \nFROM visitor \nWHERE Level_of_membership > 4 \nORDER BY Age DESC;"}
{"id":49,"question":"Find the id and name of the museum that has the most staff members?","schema":"museum_visit","dialect":"sqlite","gt_query":"SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1","schema_def":"CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n);\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n);\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)","schema_tables":"{\"museum\": [\"Museum_ID\", \"Open_Year\", \"Name\", \"Num_of_Staff\"], \"visitor\": [\"Level_of_membership\", \"Age\", \"Name\", \"ID\"], \"visit\": [\"Museum_ID\", \"Total_spent\", \"Num_of_Ticket\", \"visitor_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/museum_visit/museum_visit.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n)\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n)\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)\n    \n    Find the id and name of the museum that has the most staff members?\n    \n    SQL:\n"}],"response":"SELECT Museum_ID, Name FROM museum\nWHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)"}
{"id":50,"question":"Find the average number of staff working for the museums that were open before 2009.","schema":"museum_visit","dialect":"sqlite","gt_query":"SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009","schema_def":"CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n);\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n);\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)","schema_tables":"{\"museum\": [\"Museum_ID\", \"Open_Year\", \"Name\", \"Num_of_Staff\"], \"visitor\": [\"Level_of_membership\", \"Age\", \"Name\", \"ID\"], \"visit\": [\"Museum_ID\", \"Total_spent\", \"Num_of_Ticket\", \"visitor_ID\"]}","db_path":"/tmp/uptrain_resources/spider/database/museum_visit/museum_visit.sqlite","prompt_template":"\n    You are a {persona} whose job is to only output SQL command for a given question in {dialect} SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    {schema_def}\n    \n    {question}\n    \n    SQL:\n","model":"gpt-3.5-turbo","persona":"bot","prompt":[{"role":"system","content":"\n    You are a bot whose job is to only output SQL command for a given question in sqlite SQL dialect. Do not output anything other than the SQL command.\n    \n    Here is the create table commands for my database:\n    CREATE TABLE \"museum\" (\n\"Museum_ID\" int,\n\"Name\" text,\n\"Num_of_Staff\" int,\n\"Open_Year\" text,\nPRIMARY KEY (\"Museum_ID\")\n)\n\nCREATE TABLE \"visitor\" (\n\"ID\" int,\n\"Name\" text,\n\"Level_of_membership\" int,\n\"Age\" int,\nPRIMARY KEY (\"ID\")\n)\n\nCREATE TABLE \"visit\" (\n\"Museum_ID\" int,\n\"visitor_ID\" text,\n\"Num_of_Ticket\" int,\n\"Total_spent\" real,\nPRIMARY KEY (\"Museum_ID\",\"visitor_ID\"),\nFOREIGN KEY (\"Museum_ID\") REFERENCES `museum`(\"Museum_ID\"),\nFOREIGN KEY (\"visitor_ID\") REFERENCES `visitor`(\"ID\")\n)\n    \n    Find the average number of staff working for the museums that were open before 2009.\n    \n    SQL:\n"}],"response":"SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < '2009'"}
